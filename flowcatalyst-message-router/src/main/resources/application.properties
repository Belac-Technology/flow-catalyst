# Application Configuration
quarkus.application.name=flowcatalyst-message-router
quarkus.banner.enabled=false

# Logging Configuration - Dev: readable logs (not JSON)
%dev.quarkus.log.console.json.enabled=false
%dev.quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
%dev.quarkus.log.level=INFO
%dev.quarkus.log.category."tech.flowcatalyst".level=DEBUG

# Logging Configuration - Prod: JSON structured logs
%prod.quarkus.log.console.format=json
%prod.quarkus.log.console.json.pretty-print=false
%prod.quarkus.log.level=INFO
%prod.quarkus.log.console.json.additional-field."service.name".value=flowcatalyst-message-router
%prod.quarkus.log.console.json.additional-field."service.version".value=${quarkus.application.version:1.0.0-SNAPSHOT}
%prod.quarkus.log.console.json.additional-field."environment".value=${ENVIRONMENT:production}

# Message Router Configuration
message-router.enabled=true
message-router.queue-type=SQS
message-router.sync-interval=5m
message-router.max-pools=2000
message-router.pool-warning-threshold=1000

# Message Router Consumer Configuration
# SQS Consumer Mode: ASYNC (CompletableFuture-based) or SYNC (blocking polls)
# ASYNC mode provides ~20x lower latency for time-sensitive messages
message-router.sqs.consumer-mode=ASYNC
message-router.sqs.max-messages-per-poll=10
message-router.sqs.wait-time-seconds=20
message-router.activemq.receive-timeout-ms=1000
message-router.metrics.poll-interval-seconds=5

# HTTP Mediator Configuration
mediator.http.version=HTTP_2
%dev.mediator.http.version=HTTP_1_1

# REST Client Configuration (to fetch router config)
# Full URL including path, e.g., http://localhost:8000/api/config
quarkus.rest-client.message-router-config.url=${MESSAGE_ROUTER_CONFIG_URL:http://localhost:8080/api/config}
quarkus.rest-client.message-router-config.scope=jakarta.inject.Singleton
quarkus.rest-client.message-router-config.connect-timeout=3000
quarkus.rest-client.message-router-config.read-timeout=5000

# SQS Configuration (when using SQS)
quarkus.sqs.endpoint-override=${SQS_ENDPOINT_OVERRIDE:}
quarkus.sqs.aws.region=${AWS_REGION:eu-west-1}
quarkus.sqs.aws.credentials.type=default

# Note: SDK timeouts are configured per-request in SqsQueueConsumer (25s for polling, 10s for metrics)
# This prevents hung requests when LocalStack or network issues occur

# Dev profile - LocalStack local SQS
%dev.quarkus.sqs.endpoint-override=http://localhost:4566
%dev.quarkus.sqs.aws.region=eu-west-1
%dev.quarkus.sqs.aws.credentials.type=static
%dev.quarkus.sqs.aws.credentials.static-provider.access-key-id=test
%dev.quarkus.sqs.aws.credentials.static-provider.secret-access-key=test

# ActiveMQ Configuration (when using ACTIVEMQ)
activemq.broker.url=${ACTIVEMQ_BROKER_URL:tcp://localhost:61616}
activemq.username=${ACTIVEMQ_USERNAME:admin}
activemq.password=${ACTIVEMQ_PASSWORD:admin}

# NO DATABASE - Message router is stateless!
# If minimal storage is needed, H2 in-memory can be used but is optional

# Queue Health Monitoring
queue.health.monitor.enabled=true
queue.health.backlog.threshold=1000
queue.health.growth.threshold=100

# Notification System
notification.enabled=true
notification.batch.interval=5m
notification.min.severity=WARNING

# Email Notifications (opt-in)
notification.email.enabled=false
notification.email.from=flowcatalyst@example.com
notification.email.to=ops@example.com

# Quarkus Mailer SMTP Configuration
quarkus.mailer.from=${notification.email.from}
quarkus.mailer.host=smtp.example.com
quarkus.mailer.port=587
quarkus.mailer.start-tls=REQUIRED
quarkus.mailer.username=
quarkus.mailer.password=
quarkus.mailer.mock=true

# Production mailer config
%prod.quarkus.mailer.mock=false

# Microsoft Teams Webhook Notifications (opt-in)
notification.teams.enabled=false
notification.teams.webhook.url=
